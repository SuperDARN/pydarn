# Copyright (C) 2019 SuperDARN
# Author: Marina Schmidt

"""
Test data sets for DmapWrite
"""
import numpy as np

from collections import OrderedDict

from pydarn import DmapScalar, DmapArray

fitacf_data = [OrderedDict([('radar.revision.major', np.int8(1)), ('radar.revision.minor', np.int8(18)), ('origin.code', np.int8(0)), ('origin.time', 'Thu Oct  3 20:40:28 2019'), ('origin.command', 'make_fit 20170410.1801.00.sas.rawacf'), ('cp', np.int16(3505)), ('stid', np.int16(5)), ('time.yr', np.int16(2017)), ('time.mo', np.int16(4)), ('time.dy', np.int16(10)), ('time.hr', np.int16(18)), ('time.mt', np.int16(1)), ('time.sc', np.int16(13)), ('time.us', 894907), ('txpow', np.int16(9000)),
                            ('nave', np.int16(31)), ('atten', np.int16(0)), ('lagfr', np.int16(1200)), ('smsep', np.int16(300)), ('ercod', np.int16(0)), ('stat.agc', np.int16(0)), ('stat.lopwr', np.int16(0)), ('noise.search', np.float(27.683406829833984)), ('noise.mean', np.float(505138.03125)), ('channel', np.int16(2)), ('bmnum', np.int16(4)), ('bmazm', np.float(11.760000228881836)), ('scan', np.int16(0)), ('offset', np.int16(0)), ('rxrise', np.int16(100)), ('intt.sc', np.int16(3)), ('intt.us',
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          500000),
                            ('txpl', np.int16(300)), ('mpinc', np.int16(2400)), ('mppul', np.int16(7)), ('mplgs', np.int16(18)), ('mplgexs', np.int16(0)), ('ifmode', np.int16(-1)), ('nrang', np.int16(75)), ('frang', np.int16(180)), ('rsep', np.int16(45)), ('xcf', np.int16(1)), ('tfreq', np.int16(13032)), ('mxpwr', 1073741824), ('lvmax', 20000), ('combf', '$Id: twofsound.c,v 1.04 2016/11/08 20:00:00 KKrieger Exp $'), ('fitacf.revision.major', 2), ('fitacf.revision.minor', 5),
                            ('noise.sky', 51.5), ('noise.lag0', 0.0), ('noise.vel', 0.0), ('ptab', np.array([ 0,  9, 12, 20, 22, 26, 27], dtype=np.int16)), ('ltab', np.array([[ 0,  0],
       [26, 27],
       [20, 22],
       [ 9, 12],
       [22, 26],
       [22, 27],
       [20, 26],
       [20, 27],
       [12, 20],
       [ 0,  9],
       [12, 22],
       [ 9, 20],
       [ 0, 12],
       [ 9, 22],
       [12, 26],
       [12, 27],
       [ 9, 26],
       [ 9, 27],
       [27, 27]], dtype=np.int16)), ('pwr0', np.array([  1.4853078 ,  -1.9992387 ,   1.2388334 ,   0.08352074,
        -4.0005336 ,  -3.7936876 ,  -2.5696237 ,  -2.1349669 ,
        -4.943233  ,  -3.7936876 , -50.        , -13.138672  ,
        -2.275074  ,  -6.148972  ,  -4.217726  ,  -4.446355  ,
        -8.988938  , -20.128372  ,  -4.6876917 ,  -8.988938  ,
       -13.138672  ,  -5.504392  ,  -3.4073937 ,  -8.988938  ,
        -5.8147345 , -15.35716   ,  -6.511094  ,  -3.2264113 ,
       -20.128372  , -15.35716   ,  -3.2264113 , -50.        ,
        -2.1349669 ,  -3.5962472 ,  -1.4951437 ,  -6.148972  ,
        -1.4951437 ,  -4.446355  ,  -1.263465  ,  -1.6157888 ,
       -13.138672  ,  -8.988938  ,   1.4853078 ,  -0.44354275,
        -8.988938  ,  -8.367459  ,  -4.943233  , -11.677392  ,
        -2.8856134 ,  -9.714445  ,  -1.8676242 ,  -4.6876917 ,
        -0.6344722 ,  -2.8856134 ,  -3.5962472 ,  -4.6876917 ,
        -1.4951437 , -15.35716   ,  -2.8856134 ,  -8.988938  ,
        -2.275074  ,  -2.8856134 ,  -2.1349669 ,  -1.8676242 ,
         2.4001582 ,   0.9775249 ,   0.47860616,   1.3638189 ,
         1.2388334 ,  -0.9375913 ,  -0.834183  ,  -3.7936876 ,
        -4.6876917 ,  -1.8676242 ,  -6.9061794 ], dtype=np.float32)), ('slist', np.array([ 0,  2,  3, 33, 34, 36, 42, 43, 48, 52, 63, 64, 65, 67],
      dtype=np.int16)), ('nlag', np.array([6, 9, 6, 6, 6, 8, 8, 5, 6, 8, 5, 9, 9, 9], dtype=np.int16)), ('qflg', np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=np.int8)), ('gflg', np.array([0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0], dtype=np.int8)), ('p_l', np.array([ 2.6977837 ,  3.0294502 ,  1.4419698 , -0.38518745,  0.7558467 ,
        0.4413667 ,  2.7322605 ,  1.2448524 , -0.38650876,  0.6092027 ,
        0.3045366 ,  2.8542047 ,  1.6240871 ,  2.3837488 ], dtype=np.float32)), ('p_l_e', np.array([0.40118656, 0.5701537 , 0.6083944 ,        np.inf,        np.inf,
       0.8167566 ,        np.inf,        np.inf, 0.46209854, 0.5877831 ,
       0.39646   , 0.4408715 , 0.5418579 ,        np.inf], dtype=np.float32)), ('p_s', np.array([ 2.5384743 ,  3.1005645 ,  1.2445122 , -0.38518745,  0.7558467 ,
        0.19348286,  2.690297  ,  1.0510237 , -0.60924494,  0.38402057,
        0.26772398,  2.6948078 ,  1.4341445 ,  2.2182734 ], dtype=np.float32)), ('p_s_e', np.array([0.5757629 , 0.4619038 , 0.7530138 ,        np.inf,        np.inf,
       0.8926532 ,        np.inf,        np.inf, 0.49714264, 0.589184  ,
       0.38108447, 0.40093437, 0.50799066,        np.inf], dtype=np.float32)), ('v', np.array([-14.112799  ,  41.581795  ,  25.040861  , -26.674213  ,
        -0.27543363,  -3.9591217 ,  -3.0201569 , -25.023016  ,
       -14.7933655 ,  17.239136  ,   2.9851317 ,  -1.5561597 ,
         6.3552184 ,   5.03052   ], dtype=np.float32)), ('v_e', np.array([ 8.846274 ,  8.673713 , 19.215881 , 11.636813 , 11.2602415,
       18.140415 ,  6.486795 ,  6.3455415, 16.005634 ,  8.464193 ,
        7.446467 ,  3.203332 ,  5.136257 ,  4.995957 ], dtype=np.float32)), ('w_l', np.array([105.64946  ,   7.593222 ,  97.12044  , 489.65457  , 523.0447   ,
        36.688587 , 127.17286  ,  54.281933 ,  28.187925 ,  29.838228 ,
         3.1079998,  18.083353 ,  28.418575 , 118.19229  ], dtype=np.float32)), ('w_l_e', np.array([18.958853, 24.155224, 34.330086,       np.inf,       np.inf, 30.514742,
             np.inf,       np.inf, 16.559376, 18.501184, 13.256259, 13.625594,
       18.366789,       np.inf], dtype=np.float32)), ('w_s', np.array([186.31055 ,  69.743286, 170.24844 , 415.34674 , 429.2747  ,
        87.329735, 224.26581 , 108.85951 ,  72.569115,  78.043175,
        21.73165 ,  59.608738,  77.335625, 188.95454 ], dtype=np.float32)), ('w_s_e', np.array([26.21656 , 56.157074, 42.806076,       np.inf,       np.inf, 58.055626,
             np.inf,       np.inf, 33.778385, 32.890007, 88.28268 , 28.21373 ,
       30.176914,       np.inf], dtype=np.float32)), ('sd_l', np.array([0.17066655, 0.20535323, 0.25039908,        np.inf,        np.inf,
       0.27200773,        np.inf,        np.inf, 0.16889152, 0.23165509,
       0.13012081, 0.18588129, 0.2440147 ,        np.inf], dtype=np.float32)), ('sd_s', np.array([0.24967366, 0.20146751, 0.32133424,        np.inf,        np.inf,
       0.3131683 ,        np.inf,        np.inf, 0.20051578, 0.25152257,
       0.13096753, 0.19291049, 0.25518703,        np.inf], dtype=np.float32)), ('sd_phi', np.array([0.22895281, 0.28814685, 0.45375717, 0.28176424, 0.27817252,
       0.697321  , 0.18945536, 0.17215338, 0.52651966, 0.36087802,
       0.2306506 , 0.14582425, 0.22257043, 0.1825747 ], dtype=np.float32)), ('x_qflg', np.array([1, 1, 1, 2, 2, 2, 1, 2, 2, 2, 1, 1, 1, 1], dtype=np.int8)), ('x_gflg', np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=np.int8)), ('x_p_l', np.array([ -2.0351417 ,   2.7691488 ,  -4.6052694 ,   0.        ,
       -50.        , -50.        ,  -1.0442814 ,   0.        ,
       -50.        ,   0.        ,  -2.478636  ,  -0.32726052,
        -0.5535283 ,  -5.965576  ], dtype=np.float32)), ('x_p_l_e', np.array([0.6255092 , 0.76453793, 1.2046087 , 0.        , 0.        ,
       0.        , 0.66477555, 0.        , 0.        , 0.        ,
       0.44829416, 0.7617934 , 0.80796534,        np.inf], dtype=np.float32)), ('x_p_s', np.array([-1.4715028e+00,  2.9209704e+00, -3.3341174e+00,  0.0000000e+00,
       -5.0000000e+01, -5.0000000e+01, -7.6889819e-01,  0.0000000e+00,
       -5.0000000e+01,  0.0000000e+00, -2.3734224e+00,  3.6180701e-02,
       -7.2916818e-01, -5.9655762e+00], dtype=np.float32)), ('x_p_s_e', np.array([0.5974395 , 0.57830846, 0.9789573 , 0.        , 0.        ,
       0.        , 0.48588464, 0.        , 0.        , 0.        ,
       0.47635183, 0.6486257 , 0.5665026 ,        np.inf], dtype=np.float32)), ('x_v', np.array([-53.720684 ,  45.901024 , 119.237595 ,   0.       ,  16.975372 ,
         0.       , -12.888971 ,   0.       , -29.27941  ,   0.       ,
        75.35898  ,  14.911678 ,  -3.3812454,  57.953316 ], dtype=np.float32)), ('x_v_e', np.array([52.80338 , 21.632427, 32.402832,  0.      , 24.334463,  0.      ,
       16.380054,  0.      , 13.104874,  0.      , 13.880059, 15.124026,
       21.105808, 55.440998], dtype=np.float32)), ('x_w_l', np.array([ -83.58286  ,   -5.9233327, -104.63548  ,    0.       ,
          0.       ,    0.       ,  -22.894293 ,    0.       ,
          0.       ,    0.       ,  -27.495571 ,  -28.66031  ,
         40.63527  ,  217.5704   ], dtype=np.float32)), ('x_w_l_e', np.array([20.795755, 28.229433, 39.737568,  0.      ,  0.      ,  0.      ,
       20.245314,  0.      ,  0.      ,  0.      , 12.41851 , 21.010225,
       30.573393,       np.inf], dtype=np.float32)), ('x_w_s', np.array([-154.56888 ,    7.924963, -153.08624 ,    0.      ,    0.      ,
          0.      ,  -65.91634 ,    0.      ,    0.      ,    0.      ,
        -84.952095,  -71.209785,  112.58724 ,  226.05815 ], dtype=np.float32)), ('x_w_s_e', np.array([ 23.349607, 514.45636 ,  38.476727,   0.      ,   0.      ,
         0.      ,  31.371143,   0.      ,   0.      ,   0.      ,
        22.663614,  34.08229 ,  31.750849,        np.inf], dtype=np.float32)), ('phi0', np.array([-1.5063622 , -1.1914874 , -2.2762218 ,  0.        , -0.4431405 ,
        0.        , -0.642186  ,  0.        ,  3.0527525 ,  0.        ,
       -1.8456203 , -1.2737052 , -0.55494046, -1.9673542 ], dtype=np.float32)), ('phi0_e', np.array([0.73141927, 0.2698036 , 0.4523487 , 0.        , 0.604359  ,
       0.        , 0.24795666, 0.        , 0.46526918, 0.        ,
       0.23005335, 0.25253385, 0.27058253, 0.9380394 ], dtype=np.float32)), ('elv', np.array([ 5.927345 , 10.467248 , 37.075726 ,  0.       ,  0.       ,
        0.       , 15.4918995,  0.       ,  0.       ,  0.       ,
       38.503082 ,  9.492359 , 16.148857 , 38.104355 ], dtype=np.float32)), ('elv_low', np.array([14.436262 , 13.1733   , 38.573933 ,  0.       ,  0.       ,
        0.       , 17.295254 ,  0.       ,  0.       ,  0.       ,
        3.0622277, 12.244403 , 18.038147 , 12.165275 ], dtype=np.float32)), ('elv_high', np.array([37.205116,  6.765514, 35.521706,  0.      ,  0.      ,  0.      ,
       13.454604,  0.      ,  0.      ,  0.      , 37.74644 ,  5.517536,
       14.013576, 34.897465], dtype=np.float32)), ('x_sd_l', np.array([0.12659761, 0.19619922, 0.15100703, 0.        , 0.        ,
       0.        , 0.20855223, 0.        , 0.        , 0.        ,
       0.08103172, 0.25599697, 0.24845837,        np.inf], dtype=np.float32)), ('x_sd_s', np.array([0.14658082, 0.19688752, 0.18421784, 0.        , 0.        ,
       0.        , 0.21098189, 0.        , 0.        , 0.        ,
       0.09263504, 0.2672228 , 0.22409825,        np.inf], dtype=np.float32)), ('x_sd_phi', np.array([0.6428987 , 0.30069786, 0.30760178, 0.        , 0.43194106,
       0.        , 0.35894674, 0.        , 0.37773323, 0.        ,
       0.26385677, 0.36855435, 0.45067045, 1.0603236 ], dtype=np.float32))])]
